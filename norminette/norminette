#!/bin/bash

trap ctrl_c INT
ctrl_c() {
    rm -f tmp
    rm -f norminette_tmp
    rm -f monzizifaitlhelicoptere.c
    echo -e "\e[33mC'est pas des mani√®res de quitter un programme de qualitay petit batard!"
    exit
}

header() {
    echo -e "\e[36m _______                       .__               __    __    "
    echo -e " \      \   ___________  _____ |__| ____   _____/  |__/  |_  ____  "
    echo -e " /   |   \ /  _ \_  __ \/     \|  |/    \_/ __ \   __\   __\/ __ \ "
    echo -e "/    |    (  <_> )  | \/  Y Y  \  |   |  \  ___/|  |  |  | \  ___/ "
    echo -e "\____|__  /\____/|__|  |__|_|  /__|___|  /\___  >__|  |__|  \___  >"
    echo -e "        \/                   \/        \/     \/                \/ "
    echo -e "                                               By Le Barbu De Ses Dames"
    echo -e "\e[0m"
}

check() {
    if [ -s tmp ]
    then
        echo -e "\e[31m`cat tmp`"
        echo -e "\e[0m"
        echo $1 >> norminette_tmp
    else
        echo -e "\033[32mOK\033[0m"
        echo -e ""
    fi
}

correction() {
    if [ "$1" == "1" ] || [ "$1" == "" ]
    then
        echo -e "\e[36mCorrecting trailing spaces in all the project\e[0m"
        until [ "`grep -r ' $' *.h *.c 2> /dev/null`" = "" ]
        do
            find . -name "*.c" -type f -exec sed -i -e 's/ $//g' {} \;
            find . -name "*.h" -type f -exec sed -i -e 's/ $//g' {} \;
        done
    fi

    if [ "$1" == "2" ] || [ "$1" == "" ]
    then
        echo -e "\e[36mCorrecting new lines at the end of a file\e[0m"
        find . -name "*.c" -type f -exec delete_newline {} \;
        find . -name "*.h" -type f -exec delete_newline {} \;
    fi

    if [ "$1" == "3" ] || [ "$1" == "" ]
    then
        echo -e "\e[36mCorrecting misplaced spaces in all the project\e[0m"
        find . -name "*.c" -type f -exec sed -i -e 's/ return(/ return (/g' {} \;
        find . -name "*.c" -type f -exec sed -i -e 's/ while(/while (/g' {} \;
        find . -name "*.c" -type f -exec sed -i -e 's/ for(/for (/g' {} \;
        find . -name "*.c" -type f -exec sed -i -e 's/ if(/ if (/g' {} \;
    fi

    if [ "$1" == "5" ] || [ "$1" == "" ]
    then
        echo -e "\e[36mCorrecting the indentation in all the project\e[0m"
        find . -name "*.c" -type f -exec vim -en "+normal 7gg=GZZ" {} \;
        find . -name "*.h" -type f -exec vim -en "+normal 7gg=GZZ" {} \;
    fi
}


menu() {
    number=1
    if [ "`cat norminette_tmp | grep -E '1|2|3|5' | wc -l`" != 1 ]
    then
        echo -e "[1] All"
        let "number++"
    fi

    if [ "`echo $norm_errors | grep 1`" != "" ]
    then
        echo -e "[$number] Trailing spaces"
        let "number++"
    fi

    if [ "`echo $norm_errors | grep 2`" != "" ]
    then
        echo -e "[$number] New lines at the end of a file"
        let "number++"
    fi

    if [ "`echo $norm_errors | grep 3`" != "" ]
    then
        echo -e "[$number] Missplaced spaces"
        let "number++"
    fi

    if [ "`echo $norm_errors | grep 5`" != "" ]
    then
        echo -e "[$number] Bad indentations"
        let "number++"
    fi
    echo -e ""
    echo -e "[$number] Nothing"
    echo -e ""
}

response() {
    number=1
    if [ "`cat norminette_tmp | grep -E '1|2|3|5' | wc -l`" != 1 ]
    then
        correction "1"
        correction "2"
        correction "3"
        correction "5"
        let "number++"
    fi
    if [ "`echo $norm_errors | grep 1`" != "" ]
    then
        if [ "$1" == "$number" ]
        then
            correction "1"
        fi
        let "number++"
    fi

    if [ "`echo $norm_errors | grep 2`" != "" ]
    then
        if [ "$1" == "$number" ]
        then
            correction "2"
        fi
        let "number++"
    fi

    if [ "`echo $norm_errors | grep 3`" != "" ]
    then
        if [ "$1" == "$number" ]
        then
            correction "3"
        fi
        let "number++"
    fi

    if [ "`echo $norm_errors | grep 5`" != "" ]
    then
        if [ "$1" == "$number" ]
        then
            correction "5"
        fi
        let "number++"
    fi
}

touch norminette_tmp
header
echo -e "\e[0mChecking for trailing spaces:\e[0m"
grep -rn " $" | grep -v .git | grep -v Binary | grep -v binaire > tmp
check "1"

echo -e "\e[0mChecking for new line at end of a file:\e[0m"
find . -name "Makefile" -type f -exec check_newline {} \; > tmp
find . -name "*.c" -type f -exec check_newline {} \; >> tmp
find . -name "*.h" -type f -exec check_newline {} \; >> tmp
check "2"

echo -e "\e[0mChecking for misplaced spaces:\e[0m"
grep -rn " return(" | grep -v .git > tmp
grep -rn " while(" | grep -v .git >> tmp
grep -rn " for(" | grep -v .git >> tmp
grep -rn " if(" | grep -v .git >> tmp
check "3"

echo -e "\e[0mChecking for headers:\e[0m"
find . -name "*.c" -type f -exec check_header {} \; > tmp
find . -name "*.h" -type f -exec check_header {} \; >> tmp
check "4"

echo -e "\e[0mChecking for bad indentations:\e[0m"
find . -name "*.c" -type f -exec check_indent {} \; > tmp
find . -name "*.h" -type f -exec check_indent {} \; >> tmp
cat tmp | grep ": lines" > tmp2
cat -e tmp2 | cut -d. -f2 | sed 's/^\//\.\//g' > tmp
rm tmp2
check "5"

echo -e "\e[0mChecking for too long functions:\e[0m"
find . -name "*.c" -type f -exec check_long_function {} \; > tmp
check "6"

echo -e "\e[0mChecking for too much functions in a same file:\e[0m"
find . -name "*.c" -type f -exec check_much_function {} \; > tmp
check "6"

norm_errors=`cat norminette_tmp`
if [ "$norm_errors" == "" ]
then
    echo -e "\e[32mThe project is clear\e[0m"
else
    echo -e "\e[31mThe project has errors\e[0m"
    if [ "`cat norminette_tmp | grep  -E '1|2|3|5'`" != "" ]
    then
        echo -e ""
        menu
        read -p "Error(s) to correct: " res
        response "$res"
    fi
fi
rm -f norminette_tmp
rm -f tmp
rm -f monzizifaitlhelicoptere.c
